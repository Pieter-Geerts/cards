# This workflow builds a Flutter application, runs tests, and uploads the artifacts.
name: Flutter CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Create key.properties
        run: |
          echo "${{ secrets.KEY_PROPERTIES }}" > android/key.properties

      - name: Decode upload-keystore.jks
        run: |
          echo "${{ secrets.UPLOAD_KEYSTORE_BASE64 }}" | base64 -d > android/upload-keystore.jks

      - name: Create assets directory
        run: mkdir -p assets/icons

      - name: Install dependencies
        run: flutter pub get

      - name: Format code
        run: dart format .

      - name: Analyze project source (errors only)
        run: |
          set -o pipefail
          echo "Running flutter analyze (will only fail on errors)..."
          flutter analyze 2>&1 | tee analyzer_output.txt
          # If analyzer printed any 'error' severity lines, fail the step.
          if grep -E "\berror •\b" analyzer_output.txt >/dev/null; then
            echo "Analyzer found errors:" >&2
            grep -nE "\berror •\b" analyzer_output.txt >&2 || true
            exit 1
          else
            echo "No analyzer errors found. Info/warnings will not fail the job."
          fi

      - name: Run tests
        run: flutter test

      # Build Android App Bundle (AAB) with symbols for Play Console
      - name: Build Android App Bundle (AAB) with symbols
        run: flutter build appbundle --obfuscate --split-debug-info=build/symbols --release

      # Archive the AAB and symbols for download
      - name: Upload AAB and symbols artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-bundle-and-symbols
          path: |
            build/app/outputs/bundle/release/app-release.aab
            build/symbols/

      # Build release APK and save it as an artifact
      - name: Build release APK
        run: flutter build apk --release

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Create secrets.dart
        run: |
          cp lib/secrets_template.dart lib/secrets.dart

      - name: Get dependencies
        run: flutter pub get

      - name: Generate localization files
        run: flutter gen-l10n
