name: Weekly Dependency Update Check

on:
  schedule:
    # Run every Monday at 9:00 AM UTC
    - cron: "0 9 * * 1"
  workflow_dispatch: # Allow manual triggering
jobs:
  check-dependencies:
    name: Check for dependency updates
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Java 21
        uses: actions/setup-java@v5
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Create secrets.dart
        run: |
          cp lib/secrets_template.dart lib/secrets.dart

      - name: Get dependencies
        run: flutter pub get

      - name: Generate localization files
        run: flutter gen-l10n

      - name: Check for outdated dependencies
        id: outdated
        run: |
          echo "## 📦 Dependency Status Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check Flutter version
          echo "### Flutter Version" >> $GITHUB_STEP_SUMMARY
          flutter --version >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check for outdated dependencies
          echo "### Outdated Dependencies" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          flutter pub outdated >> outdated.txt 2>&1 || true
          cat outdated.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          
          # Check if there are any outdated dependencies
          if grep -q "dependencies have newer versions" outdated.txt; then
            echo "has_updates=true" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "⚠️ **Dependencies need updating!**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Consider running:" >> $GITHUB_STEP_SUMMARY
            echo '```bash' >> $GITHUB_STEP_SUMMARY
            echo "./scripts/update-dependencies.sh" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          else
            echo "has_updates=false" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "✅ **All dependencies are up to date!**" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Run security audit
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Security Audit" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          dart pub deps --style=compact 2>&1 | head -20 >> $GITHUB_STEP_SUMMARY || true
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Create issue for outdated dependencies
        if: steps.outdated.outputs.has_updates == 'true'
        uses: actions/github-script@v8
        with:
          script: |
            const fs = require('fs');
            const outdatedOutput = fs.readFileSync('outdated.txt', 'utf8');
            
            const issueTitle = '📦 Weekly Dependency Update Available';
            const issueBody = `
            ## 📦 Dependency Updates Available
            
            This is an automated weekly check for dependency updates.
            
            ### Outdated Dependencies:
            \`\`\`
            ${outdatedOutput}
            \`\`\`
            
            ### Recommended Actions:
            
            1. **Review the outdated dependencies** listed above
            2. **Run the update script** locally to test changes:
               \`\`\`bash
               ./scripts/update-dependencies.sh
               \`\`\`
            3. **Test thoroughly** to ensure no breaking changes
            4. **Commit updates** if everything works correctly
            
            ### Manual Steps:
            
            \`\`\`bash
            # Clone the repository
            git clone https://github.com/Pieter-Geerts/cards.git
            cd cards
            
            # Run the dependency update script
            ./scripts/update-dependencies.sh
            
            # If all tests pass, commit the changes
            git add pubspec.lock
            git commit -m "deps: Update Flutter dependencies"
            git push
            \`\`\`
            
            ---
            _This issue was automatically created by the Weekly Dependency Update Check workflow._
            _You can disable this by modifying \`.github/workflows/dependency-check.yml\`_
            `;
            
            // Check if there's already an open issue for dependency updates
            const existingIssues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['dependencies', 'automated'],
              state: 'open'
            });
            
            if (existingIssues.data.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: issueTitle,
                body: issueBody,
                labels: ['dependencies', 'automated', 'enhancement']
              });
              console.log('Created new dependency update issue');
            } else {
              console.log('Dependency update issue already exists');
            }
